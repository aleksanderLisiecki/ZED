library(tidyverse)
library(gganimate)
install.packages("tidyverse")
install.packages(gganimate)
install.packages('gganimate')
gdp_tidy <- read_csv("./data/gdp_tidy.csv")
?read.csv
?read_csv
gdp_tidy <- read.csv("./data/gdp_tidy.csv")
gdp_tidy <- read.csv("C:/Users/alili/Desktop/animated_bar_charts_in_R-master/data/gdp_tidy.csv")
gdp_formatted <- gdp_tidy %>%
group_by(year) %>%
# The * 1 makes it possible to have non-integer ranks while sliding
mutate(rank = rank(-value),
Value_rel = value/value[rank==1],
Value_lbl = paste0(" ",round(value/1e9))) %>%
group_by(country_name) %>%
filter(rank <=10) %>%
ungroup()
library(dplyr)
gdp_formatted <- gdp_tidy %>%
group_by(year) %>%
# The * 1 makes it possible to have non-integer ranks while sliding
mutate(rank = rank(-value),
Value_rel = value/value[rank==1],
Value_lbl = paste0(" ",round(value/1e9))) %>%
group_by(country_name) %>%
filter(rank <=10) %>%
ungroup()
View(gdp_formatted)
View(gdp_formatted)
View(gdp_tidy)
View(gdp_tidy)
anim <- ggplot(gdp_formatted, aes(rank, group = country_name,
fill = as.factor(country_name), color = as.factor(country_name))) +
geom_tile(aes(y = value/2,
height = value,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(country_name, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=value,label = Value_lbl, hjust=0)) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line( size=.1, color="grey" ),
panel.grid.minor.x = element_line( size=.1, color="grey" ),
plot.title=element_text(size=25, hjust=0.5, face="bold", colour="grey", vjust=-1),
plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey"),
plot.caption =element_text(size=8, hjust=0.5, face="italic", color="grey"),
plot.background=element_blank(),
plot.margin = margin(2,2, 2, 4, "cm")) +
transition_states(year, transition_length = 4, state_length = 1, wrap = FALSE) +
view_follow(fixed_x = TRUE)  +
labs(title = 'GDP per Year : {closest_state}',
subtitle  =  "Top 10 Countries",
caption  = "GDP in Billions USD | Data Source: World Bank Data")
library(ggplot2)
anim <- ggplot(gdp_formatted, aes(rank, group = country_name,
fill = as.factor(country_name), color = as.factor(country_name))) +
geom_tile(aes(y = value/2,
height = value,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(country_name, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=value,label = Value_lbl, hjust=0)) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line( size=.1, color="grey" ),
panel.grid.minor.x = element_line( size=.1, color="grey" ),
plot.title=element_text(size=25, hjust=0.5, face="bold", colour="grey", vjust=-1),
plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey"),
plot.caption =element_text(size=8, hjust=0.5, face="italic", color="grey"),
plot.background=element_blank(),
plot.margin = margin(2,2, 2, 4, "cm")) +
transition_states(year, transition_length = 4, state_length = 1, wrap = FALSE) +
view_follow(fixed_x = TRUE)  +
labs(title = 'GDP per Year : {closest_state}',
subtitle  =  "Top 10 Countries",
caption  = "GDP in Billions USD | Data Source: World Bank Data")
anim <- ggplot(gdp_formatted, aes(rank, group = country_name,
fill = as.factor(country_name), color = as.factor(country_name))) +
geom_tile(aes(y = value/2,
height = value,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(country_name, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=value,label = Value_lbl, hjust=0)) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = "none", fill = FALSE) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line( size=.1, color="grey" ),
panel.grid.minor.x = element_line( size=.1, color="grey" ),
plot.title=element_text(size=25, hjust=0.5, face="bold", colour="grey", vjust=-1),
plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey"),
plot.caption =element_text(size=8, hjust=0.5, face="italic", color="grey"),
plot.background=element_blank(),
plot.margin = margin(2,2, 2, 4, "cm")) +
transition_states(year, transition_length = 4, state_length = 1, wrap = FALSE) +
view_follow(fixed_x = TRUE)  +
labs(title = 'GDP per Year : {closest_state}',
subtitle  =  "Top 10 Countries",
caption  = "GDP in Billions USD | Data Source: World Bank Data")
library(tidyverse)
library(gganimate)
gdp_tidy <- read_csv("C:/Users/alili/Desktop/animated_bar_charts_in_R-master/data/gdp_tidy.csv")
anim <- ggplot(gdp_formatted, aes(rank, group = country_name,
fill = as.factor(country_name), color = as.factor(country_name))) +
geom_tile(aes(y = value/2,
height = value,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(country_name, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=value,label = Value_lbl, hjust=0)) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = "none", fill = FALSE) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line( size=.1, color="grey" ),
panel.grid.minor.x = element_line( size=.1, color="grey" ),
plot.title=element_text(size=25, hjust=0.5, face="bold", colour="grey", vjust=-1),
plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey"),
plot.caption =element_text(size=8, hjust=0.5, face="italic", color="grey"),
plot.background=element_blank(),
plot.margin = margin(2,2, 2, 4, "cm")) +
transition_states(year, transition_length = 4, state_length = 1, wrap = FALSE) +
view_follow(fixed_x = TRUE)  +
labs(title = 'GDP per Year : {closest_state}',
subtitle  =  "Top 10 Countries",
caption  = "GDP in Billions USD | Data Source: World Bank Data")
library(tidyverse)
library(gganimate)
install.packages('backports')
install.packages(‘tweenr’)
install.packages('tweenr')
library(tidyverse)
library(gganimate)
anim <- ggplot(gdp_formatted, aes(rank, group = country_name,
fill = as.factor(country_name), color = as.factor(country_name))) +
geom_tile(aes(y = value/2,
height = value,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(country_name, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=value,label = Value_lbl, hjust=0)) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = "none", fill = FALSE) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line( size=.1, color="grey" ),
panel.grid.minor.x = element_line( size=.1, color="grey" ),
plot.title=element_text(size=25, hjust=0.5, face="bold", colour="grey", vjust=-1),
plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey"),
plot.caption =element_text(size=8, hjust=0.5, face="italic", color="grey"),
plot.background=element_blank(),
plot.margin = margin(2,2, 2, 4, "cm")) +
transition_states(year, transition_length = 4, state_length = 1, wrap = FALSE) +
view_follow(fixed_x = TRUE)  +
labs(title = 'GDP per Year : {closest_state}',
subtitle  =  "Top 10 Countries",
caption  = "GDP in Billions USD | Data Source: World Bank Data")
animate(anim, 200, fps = 20,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim.gif"), end_pause = 15, start_pause =  15)
install.packages()
install.packages('gifski')
animate(anim, 200, fps = 20,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim.gif"), end_pause = 15, start_pause =  15)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(plotly)
library(ggplot2)
library(readxl)
library(tidyr)
Gold.prices <- read.csv("C:/Users/alili/Desktop/studia/9 semestr/ZED/projekt/Data pack/Gold prices.csv",
colClasses = c(rep("Date", 1),
rep("numeric", 2),
rep("NULL", 4)),
col.names = c('Date',
'Morning.Fix.USD',
'Afternoon.Fix.USD',
rep("NULL", 4)),
header = TRUE)
Gold.prices <- Gold.prices %>%
mutate(Morning.Fix.USD = coalesce(Morning.Fix.USD, Afternoon.Fix.USD)) %>%
mutate(Afternoon.Fix.USD = coalesce(Afternoon.Fix.USD, Morning.Fix.USD))
head(Gold.prices)
nrow(Gold.prices)
summary(Gold.prices)
ggplot(Gold.prices, aes(x = Date)) +
geom_point(aes(y = Morning.Fix.USD), color = "yellow")
World_Development_Indicators <- read_excel("C:/Users/alili/Desktop/studia/9 semestr/ZED/projekt/Data pack/World_Development_Indicators.xlsx", na = '..')
World_Development_Indicators.Series_Codes <- select(World_Development_Indicators, `Series Name`, `Series Code`)
World_Development_Indicators <- select(World_Development_Indicators, -`Series Code`)
World_Development_Indicators <- World_Development_Indicators %>%
pivot_longer(cols = `1970 [YR1970]`:`2020 [YR2020]`, names_to = "Year") %>%
group_by(`Series Name`) %>%
mutate(row = row_number()) %>%
tidyr::pivot_wider(names_from = `Series Name`, values_from = value) %>%
select(-row)
World_Development_Indicators <- World_Development_Indicators %>%
mutate(Year = as.numeric(substr(Year, 1, 4)))
View(World_Development_Indicators)
ggplot(gdp_formatted, aes(rank, group = country_name,
fill = as.factor(country_name), color = as.factor(country_name))) +
geom_tile(aes(y = value/2,
height = value,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(country_name, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=value,label = Value_lbl, hjust=0)) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = "none", fill = FALSE) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line( size=.1, color="grey" ),
panel.grid.minor.x = element_line( size=.1, color="grey" ),
plot.title=element_text(size=25, hjust=0.5, face="bold", colour="grey", vjust=-1),
plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey"),
plot.caption =element_text(size=8, hjust=0.5, face="italic", color="grey"),
plot.background=element_blank(),
plot.margin = margin(2,2, 2, 4, "cm")) +
transition_states(year, transition_length = 4, state_length = 1, wrap = FALSE) +
view_follow(fixed_x = TRUE)  +
labs(title = 'GDP per Year : {closest_state}',
subtitle  =  "Top 10 Countries",
caption  = "GDP in Billions USD | Data Source: World Bank Data")
library(plotly)
ggplotly(anim)
df <- data.frame(
x = c(1,2,3,4),
y = c(1,2,3,4),
f = c(1,2,3,4)
)
p <- ggplot(df, aes(x, y)) +
geom_point(aes(frame = f))
ggplot(df, aes(x, y)) +
geom_point(aes(frame = f))
ggplotly(p)
install.packages('gapinder')
install.packages('gapminder')
p <- ggplot(gapminder, aes(gdpPercap, lifeExp, color = continent)) +
geom_point(aes(size = pop, frame = year, ids = country)) +
scale_x_log10()
library(gapminder)
p <- ggplot(gapminder, aes(gdpPercap, lifeExp, color = continent)) +
geom_point(aes(size = pop, frame = year, ids = country)) +
scale_x_log10()
p
fig <- ggplotly(p)
fig
fig <- fig %>%
animation_opts(
1000, easing = "elastic", redraw = FALSE
)
fig
ggplotly(p)
p
World_Development_Indicators %>%
group_by(Year) %>%
summarise(`Country Name`, Year = 2000, `Urban population`)
World_Development_Indicators %>%
group_by(Year) %>%
summarise(`Country Name`, Year = 2000, `Urban population`) %>%
ggplot(aes(x = `Country Name`, y = `Urban population`)) +
geom_col()
World_Development_Indicators %>%
group_by(Year) %>%
summarise(`Country Name`, Year = 2000, `Urban population`) %>%
arrange(`Urban population`, .by_group = T) %>%
top_n(10)
?read_excel
World_Development_Indicators <- read_excel("C:/Users/alili/Desktop/studia/9 semestr/ZED/projekt/Data pack/World_Development_Indicators.xlsx",
na = '..',
range = "A1:D44305")
View(World_Development_Indicators)
View(World_Development_Indicators)
View(World_Development_Indicators.Series_Codes)
View(World_Development_Indicators.Series_Codes)
View(World_Development_Indicators)
View(World_Development_Indicators)
World_Development_Indicators <- read_excel("C:/Users/alili/Desktop/studia/9 semestr/ZED/projekt/Data pack/World_Development_Indicators.xlsx",
na = '..',
range = "A1:BC44305")
View(World_Development_Indicators)
View(World_Development_Indicators)
unique(World_Development_Indicators$`Country Name`)
df <- World_Development_Indicators %>%
filter(`Country Name`= -c("Low & middle income","Low income","Lower middle income","Middle income","Upper middle income","High income"))
df <- World_Development_Indicators %>%
filter(`Country Name`== -c("Low & middle income","Low income","Lower middle income","Middle income","Upper middle income","High income"))
df <- World_Development_Indicators %>%
filter(`Country Name`== c("Low & middle income","Low income","Lower middle income","Middle income","Upper middle income","High income"))
View(df)
View(df)
df <- World_Development_Indicators %>%
filter(`Country Name`!= c("Low & middle income","Low income","Lower middle income","Middle income","Upper middle income","High income"))
View(df)
View(df)
df <- World_Development_Indicators %>%
filter(!`Country Name` %in% c("Low & middle income","Low income","Lower middle income","Middle income","Upper middle income","High income"))
